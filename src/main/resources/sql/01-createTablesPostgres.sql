DROP TABLE IF EXISTS PRODUIT_PARTENAIRE;
DROP TABLE IF EXISTS PARTENAIRE;
DROP TABLE IF EXISTS PHOTO;
DROP TABLE IF EXISTS PRODUIT;
DROP TABLE IF EXISTS SECTEUR;
DROP TABLE IF EXISTS VILLE;
DROP TABLE IF EXISTS PAYS;
DROP TABLE IF EXISTS CIVILITE;
DROP TABLE IF EXISTS ROLE_UTILISATEUR;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS UTILISATEUR;


CREATE TABLE UTILISATEUR (
    ID_UTILISATEUR SERIAL PRIMARY KEY
    , UTI_LOGIN VARCHAR(10) NOT NULL
    , UTI_PASSWORD VARCHAR(40) NOT NULL
    , UTI_ENABLED BOOLEAN DEFAULT FALSE NOT NULL );

CREATE TABLE ROLE (
    ID_ROLE SERIAL PRIMARY KEY
    , ROL_NOM VARCHAR(30) NOT NULL);

CREATE TABLE ROLE_UTILISATEUR (
    ID_ROLE INTEGER NOT NULL
    , ID_UTILISATEUR INTEGER NOT NULL
    , CONSTRAINT FK_ROLE_UTILISATEUR_U FOREIGN KEY(ID_UTILISATEUR) REFERENCES UTILISATEUR(ID_UTILISATEUR)
    , CONSTRAINT FK_ROLE_UTILISATEUR_R FOREIGN KEY(ID_ROLE) REFERENCES ROLE(ID_ROLE)
    , CONSTRAINT PK_ROLE_UTILISATEUR PRIMARY KEY(ID_ROLE, ID_UTILISATEUR));

CREATE TABLE CIVILITE (
    ID_CIVILITE SERIAL PRIMARY KEY
    , CIV_LIBELLE VARCHAR(4));

CREATE TABLE PAYS (
    ID_PAYS SERIAL PRIMARY KEY
    , PAY_LIBELLE VARCHAR(50)
    , PAY_NATIONALITE VARCHAR(50));

CREATE TABLE VILLE (
    ID_VILLE SERIAL PRIMARY KEY
    , VIL_LIBELLE VARCHAR(50)
    , ID_PAYS INTEGER
    , CONSTRAINT FK_VILLE_PAYS FOREIGN KEY(ID_PAYS) REFERENCES PAYS(ID_PAYS));

CREATE TABLE SECTEUR (
    ID_SECTEUR SERIAL PRIMARY KEY
    , SEC_NOM VARCHAR(50)
    , SEC_DESCR VARCHAR(200)
    , SEC_DATE_CREAT timestamp
    , SEC_AUTEUR_CREAT VARCHAR(10)
    , SEC_DATE_MAJ timestamp
    , SEC_AUTEUR_MAJ VARCHAR(10)
    , SEC_DATE_SUPPR timestamp  NULL
    , SEC_AUTEUR_SUPPR VARCHAR(10) NULL);

CREATE TABLE PRODUIT (
    ID_PRODUIT SERIAL PRIMARY KEY
    , PRO_NOM VARCHAR(50)
    , PRO_DESCR VARCHAR(200) NULL
    , ID_SECTEUR INTEGER
    , CONSTRAINT FK_PRODUIT_SECTEUR FOREIGN KEY(ID_SECTEUR) REFERENCES SECTEUR(ID_SECTEUR) );

CREATE TABLE PHOTO (
	ID_PHOTO SERIAL PRIMARY KEY
    , NOM VARCHAR(500) NULL
    , MIMETYPE VARCHAR(100) NULL
    , ENCODING VARCHAR(100) NULL
    , SIZE INTEGER
    , CONTENU BYTEA
    );

CREATE TABLE PARTENAIRE (
    ID_PARTENAIRE SERIAL PRIMARY KEY
    , ID_VILLE INTEGER NOT NULL
    , ID_CIVILITE INTEGER NOT NULL
    , ID_PAYS INTEGER NOT NULL
    , ID_PHOTO INTEGER NULL
    , PAR_IS_CLIENT BOOLEAN DEFAULT FALSE
    , PAR_IS_VIP BOOLEAN DEFAULT FALSE
    , PAR_NOM VARCHAR(50)
    , PAR_PRENOM VARCHAR(50)
    , PAR_NOM_LOCAL VARCHAR(50) NULL
    , PAR_PRENOM_LOCAL VARCHAR(50) NULL
    , PAR_DATE_NAISSANCE timestamp  NULL
    , PAR_ORGANISME VARCHAR(50) NULL
    , PAR_FONCTION VARCHAR(50) NULL
    , PAR_PRO_TEL_FIXE VARCHAR(16) NULL
    , PAR_PRO_TEL_PORT VARCHAR(16) NULL
    , PAR_PRO_COURRIEL VARCHAR(80)
    , PAR_PRO_FAX VARCHAR(16) NULL
    , PAR_PRO_ADR_RUE VARCHAR(250)
    , PAR_PRO_ADR_CP VARCHAR(9)
    , PAR_ASSIST_NOM VARCHAR(50) NULL
    , PAR_ASSIST_PRENOM VARCHAR(50) NULL
    , PAR_ASSIST_TEL VARCHAR(16) NULL
    , PAR_ASSIST_COURRIEL VARCHAR(80) NULL
    , PAR_COMMENTAIRE VARCHAR(500) NULL
    , PAR_SATISFACTION VARCHAR(500) NULL
    , PAR_DATE_CREATION timestamp  NULL
    , PAR_DATE_MODIFICATION timestamp  NULL
    , CONSTRAINT FK_PARTENAIRE_VILLE FOREIGN KEY(ID_VILLE) REFERENCES VILLE(ID_VILLE)
    , CONSTRAINT FK_PARTENAIRE_CIVILIT FOREIGN KEY(ID_CIVILITE) REFERENCES CIVILITE(ID_CIVILITE)
    , CONSTRAINT FK_PARTENAIRE_PHOTO FOREIGN KEY(ID_PHOTO) REFERENCES PHOTO(ID_PHOTO)
    , CONSTRAINT FK_PARTENAIRE_PAYS_NAT FOREIGN KEY(ID_PAYS) REFERENCES PAYS(ID_PAYS));

CREATE TABLE PRODUIT_PARTENAIRE (
    ID_PRODUIT INTEGER
    , ID_PARTENAIRE INTEGER
    , CONSTRAINT FK_PRODUIT_PARTENAIRE_PRODUIT FOREIGN KEY(ID_PRODUIT) REFERENCES PRODUIT(ID_PRODUIT)
    , CONSTRAINT FK_PRODUIT_PARTENAIRE_PARTENAIRE FOREIGN KEY(ID_PARTENAIRE) REFERENCES PARTENAIRE(ID_PARTENAIRE)
    , CONSTRAINT PK_PRODUIT_PARTENAIRE PRIMARY KEY(ID_PRODUIT, ID_PARTENAIRE));

COMMIT;